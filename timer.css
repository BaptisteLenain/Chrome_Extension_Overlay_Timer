.normal-mode {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
}
:root {
  --bg: rgba(20 20 30 / 0.9);
  --border: rgba(255 255 255 / 0.25);
  --accent: #00c2ff;
  --text: #ffffff;
  --danger: #ff3b30;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  width: 280px;
  height: 260px; /* Reduced from 290px */
  color: var(--text);
  font-family: "Inter", system-ui, sans-serif;
  background: transparent;
  overflow: hidden;
}

.panel {
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 6px 0 8px 0; /* Reduced padding */
  background: var(--bg);
  border: 1px solid var(--border);
  border-radius: 20px;
  backdrop-filter: blur(24px);
}

.dragBar {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% - 72px); /* Make room for minimize and close buttons */
  height: 12px; /* Reduced from 20px */
  cursor: default; /* Default cursor unless hovering */
  z-index: 999;
}

.dragBar:hover {
  cursor: grab; /* Only show grab cursor on hover */
}

.circle-wrapper {
  position: relative;
  margin-top: 4px; /* Reduced from 8px */
  display: flex;
  align-items: center;
  justify-content: center;
}

.progress-ring {
  transform: rotate(-90deg);
}
.progress-ring__bg,
.progress-ring__fill {
  fill: none;
  stroke-width: 6; /* Reduced from 8 */
  stroke-linecap: butt; /* Changed from round to match straight lines */
  stroke-linejoin: miter; /* Ensure sharp joins */
}
.progress-ring__bg {
  stroke: rgba(255 255 255 / 0.15);
}
.progress-ring__fill {
  stroke: var(--accent);
}

.time-display {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  color: var(--text);
  font-size: 24px; /* Reduced from 28px */
  font-weight: 700;
  text-align: center;
  outline: none;
  cursor: pointer;
  font-family: "JetBrains Mono", monospace;
  caret-color: var(--accent);
}

.quick-add {
  display: flex;
  gap: 8px;
  margin: 6px 0 6px 0; /* Reduced margins */
  min-height: 28px; /* Reduced from 32px */
  justify-content: center;
}
.quick-add.hidden {
  visibility: hidden; /* Use visibility instead of display to maintain space */
}
.quick-add button {
  padding: 4px 8px; /* Reduced padding */
  font-size: 12px; /* Reduced font size */
  font-weight: 500; /* Reduced weight */
  border: none;
  border-radius: 8px; /* Slightly smaller radius */
  background: rgba(255 255 255 / 0.1); /* Slightly more subtle */
  color: var(--text);
  cursor: pointer;
  transition: background 0.2s;
}
.quick-add button:hover {
  background: rgba(255 255 255 / 0.2); /* Reduced hover intensity */
}

.controls {
  display: flex;
  gap: 12px;
  margin: 4px 0 0 0;
  justify-content: center;
  align-items: center;
}
.controls button {
  padding: 6px 12px; /* Reduced padding for smaller height */
  font-size: 18px; /* Base font size */
  font-weight: 600;
  border: none;
  border-radius: 12px;
  background: var(--accent);
  color: #000;
  cursor: pointer;
  min-width: 44px; /* Slightly reduced */
  min-height: 40px; /* Reduced height */
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.2s; /* Only transition background, not size */
  line-height: 1; /* Ensure consistent vertical alignment */
}

/* Specific styling for reset button to make it larger */
.controls button#reset {
  font-size: 26px; /* Even larger font for reset icon */
  padding: 5px 12px 9px 12px; /* Slightly adjust padding to center the larger icon */
}

.controls button:hover {
  background: #0af;
}

/* When timer is finished, center the reset button */
.controls button.reset-only {
  background: var(--accent);
  color: #000;
  margin: 0 auto; /* Center the button when it's the only one */
}
.controls button.reset-only:hover {
  background: #0af;
}

/* --- Fixed close button --- */
.close {
  position: absolute;
  top: 6px;
  right: 8px;
  width: 28px;
  height: 28px;
  background: rgba(255 255 255 / 0.2);
  border: none;
  border-radius: 50%;
  color: #fff;
  font-size: 18px;
  cursor: pointer;
  z-index: 1010; /* above drag-bar */
  transition: background 0.2s;
  pointer-events: auto; /* Ensure it can be clicked */
}
.close:hover {
  background: #ff3b30;
}

/* --- Minimize button --- */
.minimize {
  position: absolute;
  top: 6px;
  right: 44px; /* To the left of close button */
  width: 28px;
  height: 28px;
  background: rgba(255 255 255 / 0.2);
  border: none;
  border-radius: 50%;
  color: #fff;
  font-size: 18px;
  cursor: pointer;
  z-index: 1010;
  transition: background 0.2s;
  pointer-events: auto;
}
.minimize:hover {
  background: #0af;
}

/* --- Compact mode styles --- */
.panel.compact {
  height: 42px; /* Increased to accommodate larger buttons */
  padding: 6px 8px;
  flex-direction: row;
  justify-content: space-between; /* Space between timer and buttons */
  align-items: center;
}

.panel.compact .dragBar {
  width: 50px; /* Reduced width */
  height: 12px;
}

/* Hide minimize button in compact mode */
.panel.compact .minimize {
  display: none;
}

/* Keep close button visible and properly positioned at the far right */
.panel.compact .close {
  position: absolute;
  top: 6px; /* Same as expanded mode - no movement */
  right: 8px; /* Same as expanded mode - no movement */
  width: 28px; /* Same as expanded mode */
  height: 28px; /* Same as expanded mode */
  font-size: 18px; /* Same as expanded mode */
  flex-shrink: 0;
}

.compact-mode {
  display: flex;
  align-items: center;
  gap: 12px; /* Same gap as expanded mode - this creates consistent spacing */
  flex: 1;
  padding-right: 36px; /* Just enough room for close button: 28px + 8px margin */
}

.compact-time-display {
  background: transparent;
  border: none;
  color: var(--text);
  font-size: 16px; /* Increased to better match button proportions */
  font-weight: 700;
  font-family: "JetBrains Mono", monospace;
  outline: none;
  cursor: pointer;
  caret-color: var(--accent);
  width: 80px; /* Increased to prevent text cutoff */
  flex-shrink: 0;
}

.compact-controls {
  display: flex;
  gap: 8px; /* Same gap as expanded mode controls */
  align-items: center;
  margin-left: auto; /* Push controls to the right, but maintain internal spacing */
}

.compact-btn {
  width: 28px; /* Same as minimize/close buttons in expanded mode */
  height: 28px; /* Same as minimize/close buttons in expanded mode */
  background: rgba(255 255 255 / 0.2);
  border: none;
  border-radius: 50%;
  color: var(--text);
  font-size: 14px; /* Increased to match */
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.2s;
  flex-shrink: 0;
}

.compact-btn:hover {
  background: #0af;
}

.compact-btn.active {
  background: var(--accent);
  color: #000;
}

.compact-btn #compactStartPause {
  background: var(--accent);
  color: #000;
}
